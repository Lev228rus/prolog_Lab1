/*Алгоритм Флойда
Дан связный граф, заданный матрицей весов дуг. 
Требуется найти кратчайшие расстояния между всеми парами вершин графа.
На входе программы задаётся число вершин и матрица весов.
На выходе - матрица длин кратчайших путей. 
Если в графе есть цикл с отрицательным весом - вывести сообщение "Нет решения"*/

#include <iostream>
#include <algorithm> //подключение библиотеки для функции min
using namespace std;
int main()
{
  setlocale(LC_ALL, "Russian");
  int n; //количество вершин графа
  cout << "Введите количество вершин графа: ";
  cin >> n;
  int *a = new int[n*n]; // выделяем память под матрицу весов дуг
  
  cout << "Заполните матрицу весов дуг:\n ВАЖНО! Максимальная длина пути графа: 100. Если между точками графа нет пути, писать: 101\n";
  for (int i=0; i<n; i++)
    for (int j = 0; j < n; j++)
    {
      cout << i + 1 << " - " << j + 1 << ": ";
      cin >> *(a + i * n + j);
    }
  
  cout << "\nМатрица весов дуг:\n"; //вывод матрицы весов дуг на консоль
  for (int i = 0; i < n; i++)
  {
    for (int j = 0; j < n; j++)
    {
      cout.width(4);
      if (*(a + i * n + j) == 101)
        cout << "-";
      else
      cout << *(a + i * n + j);
    }
    cout << endl;
  }

  int *t = new int[n*n]; //выделение памяти для матрицы смежности
  for (int i = 0; i < n; i++)
    for (int j = 0; j < n; j++)
      *(t + i * n + j) = *(a + i * n + j);

  for (int k = 0; k < n; k++)
    for (int i = 0; i < n; i++)
      for (int j = 0; j < n; j++)
        if (i != j && *(t + i * n + k) != 101 && *(t + k * n + j) != 101)
        {
          if (*(t + i * n + j) == 101)
            *(t + i * n + j) = *(t + i * n + k) + *(t + k * n + j);
          else
            *(t + i * n + j) = min(*(t + i * n + j), *(t + i * n + k) + *(t + k * n + j));
        }

  cout << "\nМатрица кратчайших путей:\n"; //вывод матрицы весов дуг на консоль
  for (int i = 0; i < n; i++)
  {
    for (int j = 0; j < n; j++)
    {
      if (*(t + i * n + j) < 0) //проверка условия: граф имеет цикл с отрицательным весом
      {
        cout << "Нет решения";
        return (0);
      }
      else //вывод матрицы смежности на консоль
      {
        cout.width(4);
        cout << *(t + i * n + j) << " ";
      }
    }
    cout << endl;
  }
  
  return 0;
}
